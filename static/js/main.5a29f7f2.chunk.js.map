{"version":3,"sources":["views/Home/style.module.scss","components/common/CountdownTimer/style.module.scss","components/common/TimerSvg/style.module.scss","components/common/Input/style.module.scss","components/common/List/components/Item/components/Meta/components/Description/style.module.scss","components/common/List/components/Item/components/Meta/components/Title/style.module.scss","components/common/List/components/Item/components/Meta/style.module.scss","components/common/List/components/Item/style.module.scss","components/common/List/style.module.scss","components/common/Checkbox/style.module.scss","components/common/HomeNav/style.module.scss","components/common/CountdownTimer/index.js","components/common/TimerSvg/index.js","components/common/Input/index.js","components/common/List/components/Item/components/Meta/components/Description/index.js","components/common/List/components/Item/components/Meta/components/Title/index.js","components/common/List/components/Item/components/Meta/index.js","components/common/List/components/Item/index.js","components/common/List/index.js","components/common/Checkbox/index.js","components/common/HomeNav/index.js","views/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","home","home-left","home-right","home-list__text","home-dot","home-input","home-list","home-list-container","countdown-timer","countdown-timer__display","timer-svg","timer-svg__animation","active","timer-svg__inner","play-icon","timer-svg__reset","input-container","input","input__suffix","list-item-meta-description","list-item-meta-title","list-item-meta","list-item","list-item__suffix","list","checkbox-container","checkbox","checkbox-checkmark","home-nav","home-nav__icons","icon","home-nav__text","cx","classnames","bind","styles","CountdownTimer","PropTypes","number","string","props","startTimeInSeconds","textType","displayminutes","Math","floor","displaySeconds","formatTime","time","concat","react_default","a","createElement","className","data-countdown-type","TimerSVG","bool","oneOfType","func","isActive","isReset","propSeconds","seconds","toggleTimer","resetTimer","initialSeconds","timerType","_useState","useState","_useState2","Object","slicedToArray","intervalDegree","setIntervalDegree","eachDegree","Number","useEffect","interval","clearInterval","setInterval","data-is-playing","data-timer-type","width","height","cy","r","style","strokeDashoffset","onClick","defaultProps","node","Input","placeholder","inputSize","inputType","suffix","data-input-type","type","data-input-size","Description","restProps","objectWithoutProperties","assign","Title","object","any","Meta","title","_props$titleProps","titleProps","description","_props$descriptionPro","descriptionProps","children","components_Title","components_Description","Item","prefix","hasBorder","data-has-border","List","classNames","Checkbox","size","onChange","checkboxId","data-checkbox-size","data-checkbox-id","e","readOnly","data-checkbox-type","checkedStatus","HomeNav","Home","useRef","current","setSeconds","_useState3","task","id","_useState4","fakeList","setFakeList","_useState5","_useState6","homeType","setHomeType","_useState7","_useState8","breakTime","setBreakTime","_useState9","_useState10","setIsReset","_useState11","_useState12","setIsActive","_useState13","_useState14","tomatos","setTomatos","toConsumableArray","document","querySelector","dataset","handleCheck","s","completedTaskId","target","status","checked","Promise","resolve","rejcet","setTimeout","then","filter","item","data-home-type","common_Input","common_List","common_Checkbox","marginRight","fontSize","length","map","index","key","common_CountdownTimer","reset","slice","TimerSvg","common_HomeNav","App","views_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a29f7f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"style_home__2Ant8\",\"home-left\":\"style_home-left__1yiOY\",\"home-right\":\"style_home-right___gZUF\",\"home-list__text\":\"style_home-list__text__3AfM0\",\"home-dot\":\"style_home-dot__j9cZX\",\"home-input\":\"style_home-input__1qDdb\",\"home-list\":\"style_home-list__3F6Hz\",\"home-list-container\":\"style_home-list-container__1ZdZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"countdown-timer\":\"style_countdown-timer__2U-B-\",\"countdown-timer__display\":\"style_countdown-timer__display__3X3mw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer-svg\":\"style_timer-svg__AEtXj\",\"timer-svg__animation\":\"style_timer-svg__animation__2zvEe\",\"active\":\"style_active__1QY4v\",\"timer-svg__inner\":\"style_timer-svg__inner__3KiR7\",\"play-icon\":\"style_play-icon__1fyIk\",\"timer-svg__reset\":\"style_timer-svg__reset__mOxX_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-container\":\"style_input-container__1xYW5\",\"input\":\"style_input__2hC99\",\"input__suffix\":\"style_input__suffix__3KAw0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-item-meta-description\":\"style_list-item-meta-description__2R7y0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-item-meta-title\":\"style_list-item-meta-title__2OqGq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-item-meta\":\"style_list-item-meta__3y7tL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-item\":\"style_list-item__12eBt\",\"list-item__suffix\":\"style_list-item__suffix__1yuIE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"style_list__2zj9g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox-container\":\"style_checkbox-container__2DwyH\",\"checkbox\":\"style_checkbox__1-Kab\",\"checkbox-checkmark\":\"style_checkbox-checkmark__2BFj3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home-nav\":\"style_home-nav__3X0hu\",\"home-nav__icons\":\"style_home-nav__icons___F06Z\",\"icon\":\"style_icon__1cI8j\",\"home-nav__text\":\"style_home-nav__text__VGAMi\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport styles from './style.module.scss';\n\nconst cx = classnames.bind(styles);\n\nexport const propTypes = {\n  startTimeInSeconds: PropTypes.number,\n  textType: PropTypes.string,\n}\n\nconst CountdownTimer = props => {\n  const { startTimeInSeconds, textType } = props;\n  const displayminutes = Math.floor(startTimeInSeconds / 60);\n  const displaySeconds = Math.floor(startTimeInSeconds % 60);\n\n  const formatTime = time => {\n    if (time < 10) return `0${time}`;\n    else return time;\n  };\n\n  return (\n    <div className={cx('countdown-timer')} data-countdown-type={textType}>\n      <div className={cx('countdown-timer__display')}>\n        {formatTime(displayminutes)}:{formatTime(displaySeconds)}\n      </div>\n    </div>\n  );\n};\n\nCountdownTimer.propTypes = propTypes;\n\nexport default CountdownTimer;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport styles from './style.module.scss';\n\nconst cx = classnames.bind(styles);\n\nexport const propTypes = {\n  isActive: PropTypes.bool,\n  isReset: PropTypes.bool,\n  seconds: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  toggleTimer: PropTypes.func,\n  resetTimer: PropTypes.func,\n  initialSeconds: PropTypes.number,\n  timerType: PropTypes.string\n};\nexport const defaultProps = {\n  isActive: true\n};\n\nconst TimerSVG = props => {\n  const {\n    isActive,\n    isReset,\n    seconds: propSeconds,\n    toggleTimer,\n    resetTimer,\n    initialSeconds,\n    timerType\n  } = props;\n  const [intervalDegree, setIntervalDegree] = useState(0);\n  const eachDegree = (360 - 57) / Number(initialSeconds);\n  useEffect(() => {\n    let interval = null;\n    if (isReset) {\n      setIntervalDegree(0);\n    }\n    if (isActive) {\n      if (propSeconds < 1) {\n        setIntervalDegree(0);\n        clearInterval(interval);\n        return;\n      }\n      interval = setInterval(() => {\n        setIntervalDegree(intervalDegree => intervalDegree + eachDegree);\n      }, 1000);\n    } else if (!isActive && propSeconds !== 0) {\n      clearInterval(interval);\n    } else clearInterval(interval);\n    return () => clearInterval(interval);\n  }, [\n    eachDegree,\n    intervalDegree,\n    isActive,\n    isReset,\n    propSeconds,\n    setIntervalDegree\n  ]);\n\n  return (\n    <div\n      className={cx('timer-svg')}\n      data-is-playing={isActive}\n      data-timer-type={timerType}\n    >\n      <div className={cx('timer-svg__inner')}>\n        <svg\n          width=\"540\"\n          height=\"540\"\n          className={cx('timer-svg__animation', { active: isActive })}\n        >\n          <circle\n            cx=\"50%\"\n            cy=\"50%\"\n            r=\"260\"\n            style={\n              isActive ? { strokeDashoffset: `${57 + intervalDegree}%` } : {}\n            }\n            // style={isActive ? {animationDuration:`${propSeconds}s`}: {}}\n          />\n        </svg>\n        <div className={cx('play-icon')}>\n          <i className={cx('material-icons')} onClick={toggleTimer}>\n            {isActive ? 'pause_circle_filled' : 'play_circle_filled_white'}\n          </i>\n        </div>\n        <span className={cx('timer-svg__reset')} onClick={resetTimer} />\n      </div>\n    </div>\n  );\n};\n\nTimerSVG.propTypes = propTypes;\nTimerSVG.defaultProps = defaultProps;\n\nexport default TimerSVG;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\n\n// Components\n\n// Style\nimport styles from './style.module.scss';\n\n// Variables / Functions\nconst cx = classnames.bind(styles);\n\nexport const propTypes = {\n  placeholder: PropTypes.string,\n  inputSize: PropTypes.string,\n  inputType: PropTypes.string,\n  suffix: PropTypes.node,\n  width: PropTypes.string\n};\n\nexport const defaultProps = {\n  placeholder: 'ADD A NEW Mission…',\n  inputSize: 'regular',\n};\n\nfunction Input(props) {\n  const { placeholder, inputSize, inputType, suffix, width } = props;\n\n  return (\n    <div className={cx('input-container')} style={{width}} data-input-type={inputType}>\n      <input\n        className={cx('input')}\n        type=\"text\"\n        data-input-size={inputSize}\n\n        placeholder={placeholder}\n      />\n      <div className={cx('input__suffix')}>{suffix}</div>\n    </div>\n  );\n}\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\n\nexport default Input;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames/bind'\n\n// Style\nimport styles from './style.module.scss'\n\n// Variables / Functions\nconst cx = classnames.bind(styles)\n\nexport const propTypes = {\n  className: PropTypes.string,\n}\n\nfunction Description (props) {\n  const { className, ...restProps } = props\n\n  return <span className={cx('list-item-meta-description', className)} {...restProps} />\n}\n\nDescription.propTypes = propTypes\n\nexport default Description\n","/* eslint-disable jsx-a11y/heading-has-content */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames/bind'\n\n// Style\nimport styles from './style.module.scss'\n\n// Variables / Functions\nconst cx = classnames.bind(styles)\n\nexport const propTypes = {\n  className: PropTypes.string,\n}\n\nfunction Title (props) {\n  const { className, ...restProps } = props\n\n  return <h4 className={cx('list-item-meta-title', className)} {...restProps} />\n}\n\nTitle.propTypes = propTypes\n\nexport default Title\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames/bind'\n\n// Components\nimport Description from './components/Description'\nimport Title from './components/Title'\n\n// Style\nimport styles from './style.module.scss'\n\n// Variables / Functions\nconst cx = classnames.bind(styles)\n\nexport const propTypes = {\n  title: PropTypes.node,\n  titleProps: PropTypes.object,\n  description: PropTypes.node,\n  descriptionProps: PropTypes.object,\n  className: PropTypes.string,\n  children: PropTypes.any,\n}\n\nfunction Meta (props) {\n  const { title, titleProps = {}, description, descriptionProps = {}, className, children, ...restProps } = props\n\n  return (\n    <div className={cx('list-item-meta', className)} {...restProps}>\n      <Title {...titleProps}>{title}</Title>\n      <Description {...descriptionProps}>{description}</Description>\n    </div>\n  )\n}\n\nMeta.propTypes = propTypes\n\nexport default Meta\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames/bind'\n\n// Components\nimport Meta from './components/Meta'\n\n// Style\nimport styles from './style.module.scss'\n\n// Variables / Functions\nconst cx = classnames.bind(styles)\n\nexport const propTypes = {\n  prefix: PropTypes.node,\n  suffix: PropTypes.node,\n  className: PropTypes.string,\n  children: PropTypes.any,\n  hasBorder: PropTypes.bool,\n}\n\nfunction Item (props) {\n  const { prefix, suffix, className, children, hasBorder, ...restProps } = props\n\n  return (\n    <li className={cx('list-item', className)} data-has-border={hasBorder} {...restProps}>\n      {prefix}\n      {children}\n      <div className={cx(\"list-item__suffix\")}>\n        {suffix}\n      </div>\n    </li>\n  )\n}\n\nItem.propTypes = propTypes\n\nItem.Meta = Meta\n\nexport default Item\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames/bind'\n\n// Components\nimport Item from './components/Item'\n\n// Style\nimport styles from './style.module.scss'\n\n// Variables / Functions\nconst cx = classnames.bind(styles)\n\nexport const propTypes = {\n  className: PropTypes.string,\n  style: PropTypes.object,\n}\n\nfunction List (props) {\n  const { className, style, ...restProps } = props\n\n  return <ul className={cx('list', className)} style={style} {...restProps} />\n}\n\nList.propTypes = propTypes\n\nList.Item = Item\n\nexport default List\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport styles from './style.module.scss';\n\nconst cx = classNames.bind(styles);\n\nexport const propTypes = {\n  type: PropTypes.string,\n  size: PropTypes.string,\n  style: PropTypes.object,\n  onClick: PropTypes.func,\n  checkboxId: PropTypes.number\n};\n\nexport const defaultProps = {\n  type: 'radio',\n  size: 'large',\n  checkedStatus: false\n};\n\n\nconst Checkbox = props => {\n  const { type, size, style, onChange, checkboxId } = props;\n  return (\n    <label\n      className={cx('checkbox-container')}\n      data-checkbox-size={size}\n      style={style}\n    >\n      <input\n        className={cx('checkbox')}\n        type=\"checkbox\"\n        data-checkbox-id={checkboxId}\n        onChange={(e) => onChange(e)}\n        readOnly\n      />\n      <span\n        className={cx('checkbox-checkmark')}\n        data-checkbox-type={type}\n        data-checkbox-size={size}\n      />\n    </label>\n  );\n};\n\nCheckbox.propTypes = propTypes;\nCheckbox.defaultProps = defaultProps;\n\nexport default Checkbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport styles from './style.module.scss';\n\nconst cx = classnames.bind(styles);\n\nexport const propTypes = {\n  className: PropTypes.string\n  // homeType: PropTypes.string\n};\n\nexport const defaultProps = {\n  // homeType: 'default'\n};\n\nconst HomeNav = props => {\n  return (\n    <div className={cx('home-nav')}>\n      <div className={cx('home-nav__icons')}>\n        <i className={cx(\"material-icons\", 'icon')}>toc</i>\n        <i className={cx(\"material-icons\", 'icon')}>insert_chart_outlined</i>\n        <i className={cx(\"material-icons\", 'icon')}>library_music</i>\n      </div>\n      <span className={cx('home-nav__text')}>POMODORO</span>\n    </div>\n  );\n};\n\nHomeNav.propTypes = propTypes;\nexport default HomeNav;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport styles from './style.module.scss';\n\n// components\nimport CountdownTimer from '../../components/common/CountdownTimer';\nimport TimerSvg from '../../components/common/TimerSvg';\nimport Input from '../../components/common/Input';\nimport List from '../../components/common/List';\nimport Checkbox from '../../components/common/Checkbox';\nimport HomeNav from '../../components/common/HomeNav';\n\nconst cx = classnames.bind(styles);\n\nexport const propTypes = {\n  className: PropTypes.string\n  // homeType: PropTypes.string\n};\n\nexport const defaultProps = {\n  // homeType: 'default'\n};\n\nconst Home = props => {\n  const { className } = props;\n\n  let initialSeconds = useRef(5);\n\n  const initialTodoList = [\n    { task: 'FIRST THING TO DO TODAY', id: 1 },\n    { task: 'Second THING TO DO TODAY', id: 2 },\n    { task: 'Third THING TO DO TODAY', id: 3 },\n    { task: 'Fourth THING TO DO TODAY', id: 4 },\n    { task: 'Fifth THING TO DO TODAY', id: 5 },\n    { task: 'Sixth THING TO DO TODAY', id: 6 }\n  ];\n  // countdown time / counting by seconds\n  const [seconds, setSeconds] = useState(initialSeconds.current);\n  const [fakeList, setFakeList] = useState(initialTodoList);\n  const [homeType, setHomeType] = useState('default');\n  const [breakTime, setBreakTime] = useState(true);\n  const [isReset, setIsReset] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n  const [tomatos, setTomatos] = useState([]);\n\n  useEffect(() => {\n    let interval = null;\n    if (seconds < 1) {\n      setBreakTime(!breakTime);\n      if (breakTime) {\n        initialSeconds.current = 10;\n        setHomeType('primary');\n        setSeconds(initialSeconds.current);\n        setTomatos([...tomatos, 1]);\n        document.querySelector('body').dataset.homeType = 'primary';\n      } else {\n        initialSeconds.current = 5;\n        setHomeType('default');\n        setSeconds(initialSeconds.current);\n        document.querySelector('body').dataset.homeType = 'default';\n      }\n    }\n    if (isActive) {\n      if (seconds < 1) {\n        setIsActive(false);\n        // setBreakTime(!breakTime);\n        clearInterval(interval);\n        return;\n      }\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds - 1);\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [breakTime, isActive, seconds, tomatos]);\n\n  const toggleTimer = () => {\n    setIsActive(!isActive);\n    setIsReset(false);\n  };\n\n  const resetTimer = () => {\n    setSeconds(initialSeconds.current);\n    setIsReset(true);\n    setTomatos([]);\n    setIsActive(false);\n  };\n  const delayRemove = function(s) {\n    return new Promise((resolve, rejcet) => {\n      setIsActive(false);\n      setTimeout(resolve, s);\n    });\n  };\n  const handleCheck = e => {\n    const completedTaskId = e.target.dataset.checkboxId;\n    let status = e.target.checked;\n    if (status) {\n      delayRemove(500).then(() => {\n        setFakeList(\n          fakeList.filter(item => Number(item.id) !== Number(completedTaskId))\n        );\n        setSeconds(initialSeconds.current);\n        setIsReset(true);\n        setTomatos([])\n        status = false\n      });\n    }\n\n  };\n\n  return (\n    <div className={cx('home', className)} data-home-type={homeType}>\n      <div className={cx('home-left')}>\n        <div className={cx('home-input')}>\n          <Input\n            suffix={<i className=\"material-icons\">add</i>}\n            inputType={homeType}\n          />\n        </div>\n        <div className={cx('home-list', 'home-timer-display')}>\n          <List.Item\n            prefix={\n              <Checkbox\n                checkboxId={fakeList[0].id}\n                onChange={handleCheck}\n                className={cx('home-timer-checkbox')}\n                size=\"large\"\n                style={{ marginRight: '16px' }}\n              />\n            }\n          >\n            <List.Item.Meta\n              title={\n                <span style={{ fontSize: '24px' }}>\n                  {fakeList.length > 1\n                    ? fakeList[0].task\n                    : 'Congrats! You completed all.'}\n                </span>\n              }\n              description={tomatos.map((item, index) => (\n                <i className={cx('material-icons', 'home-dot')} key={index}>\n                  fiber_manual_record\n                </i>\n              ))}\n            />\n          </List.Item>\n          <CountdownTimer\n            startTimeInSeconds={seconds}\n            toggleTimer={toggleTimer}\n            textType={homeType}\n            reset={resetTimer}\n          />\n        </div>\n        <div className={cx('home-list')}>\n          <List>\n            <div className={cx('home-list-container')}>\n              {fakeList.slice(1).map(item => (\n                <List.Item\n                  hasBorder\n                  key={item.id}\n                  prefix={\n                    <Checkbox\n                      onChange={handleCheck}\n                      checkboxId={item.id}\n                      size=\"regular\"\n                      style={{ marginRight: '6px' }}\n                    />\n                  }\n                  suffix={\n                    <i\n                      className={cx('material-icons')}\n                      style={{ width: '24px' }}\n                    >\n                      play_circle_outline\n                    </i>\n                  }\n                >\n                  {item.task}\n                </List.Item>\n              ))}\n            </div>\n          </List>\n          <p className={cx('home-list__text')}>More</p>\n        </div>\n      </div>\n      <div className={cx('home-right')}>\n        <TimerSvg\n          seconds={seconds}\n          initialSeconds={initialSeconds.current}\n          isActive={isActive}\n          isReset={isReset}\n          toggleTimer={toggleTimer}\n          resetTimer={resetTimer}\n          timerType={homeType}\n        />\n      </div>\n      <HomeNav />\n    </div>\n  );\n};\n\nHome.propTypes = propTypes;\nHome.defaultProps = defaultProps;\n\nexport default Home;\n","import React from 'react';\nimport Home from './views/Home';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\"data-home-type='primary'>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}